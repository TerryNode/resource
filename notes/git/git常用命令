git命令行使用的是Linux命令

-----创建版本库-----

mkdir dirname：创建dirname目录

cd dir：切换到dir目录

pwd：显示当前工作目录

git init：初始化git，把所在目录变成Git可以管理的仓库

git status：查看

cat filename：查看filename的内容

git add filename.txt：添加filename.txt到仓库工作暂存区

git commit -m 'dest'：提交暂存区的文件到仓库，-m为添加记录描述，commit是一次把暂存区中一个或多个文件一次提交至仓库，add是提交单个文件至暂存区

工作区->暂存区->本地仓库（版本库包含暂存区和本地仓库）

git log：查看历史纪录，加上--pretty=oneline参数可以简化输出

-----版本回退-----

git reset --hard HEAD^：回退到上一个版本，HEAD^5回退到往前第五个版本

git reset --hard dsaf：回退到dsaf版本，可以只写版本号的前几位

git reflog：用来记录你的每一次命令

-----管理修改-----

git diff HEAD -- filename：命令可以查看工作区和版本库里面最新版本的区别

-----撤销修改-----

git checkout --filename：把文件在工作区内的修改全部撤销，会有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态

git reset HEAD <file>：可以把暂存区的修改撤销掉（unstage），重新放回工作区，当我们用HEAD时，表示最新的版本

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，
第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

-----删除文件-----

rm filename：直接用Linux命令rm删除文件

git rm filename：从版本库中删除，再commit

一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit

如果删错了，还可以checkout撤消删除，从版本库中恢复

git checkout --filename

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，

但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。



